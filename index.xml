<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Shengting Cao&#39;s  Notebook  ᕦʕ •ᴥ•ʔᕤ </title>
    <link>https://shengtingcao.top/</link>
    <description>Recent content in Home on Shengting Cao&#39;s  Notebook  ᕦʕ •ᴥ•ʔᕤ </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://shengtingcao.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Buid Home Raspberry Pi NAS</title>
      <link>https://shengtingcao.top/blog/raspberrypi_nas_tutorial/</link>
      <pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/raspberrypi_nas_tutorial/</guid>
      <description>NAS, or Network Attached Storage, is a specialized storage device connected to a network, providing centralized file-level data access to multiple users and devices. It facilitates convenient data sharing, backup, and storage management within a local network environment.&#xA;In this tutorial, I will go trough the process of buding a working NAS using raspberry pi and external drive as well as a plex server for video streaming at home netowrk. I will also explain the neccesarry problems that enconterd and the solution of the problems.</description>
    </item>
    <item>
      <title>使用树莓派搭建家庭NAS</title>
      <link>https://shengtingcao.top/%E5%8D%9A%E5%AE%A2/nas_tutorial_cn/</link>
      <pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/%E5%8D%9A%E5%AE%A2/nas_tutorial_cn/</guid>
      <description>NAS，或网络附加存储，是一种连接到网络的专用存储设备，为多个用户和设备提供集中的文件级数据访问。它在本地网络环境中方便地实现数据共享、备份和存储管理。&#xA;在本教程中，我将介绍使用树莓派和外部驱动器构建工作中的NAS的过程，以及用于在家庭网络中进行视频流媒体的 Plex 服务器。我还将解释遇到的一些问题以及问题的解决方案。&#xA;您将需要以下硬件。&#xA;Raspberry pi 4B 我使用的是树莓派的 4GB 版本，其他版本在这个项目中也可以使用。但是更好的 CPU 将有助于更快地流式传输视频而不延迟。&#xA;External drive 我使用了一款14T的外部驱动器，带有外部电源。&#xA;您需要安装以下软件或操作系统&#xA;Debian Bullseye 没有桌面环境 您需要选择没有桌面环境的 Debian Bullseye 操作系统，否则您将在安装 openmediavault 时遇到问题。&#xA;Openmediavault OpenMediaVault（OMV）是一个免费且开源的网络附加存储（NAS）解决方案。它充当NAS设备的操作系统，提供基于Web的图形用户界面，用于轻松管理存储、文件共享和其他与服务器相关的任务。OMV支持各种存储技术、插件和功能，使其成为创建和管理家庭或小型企业NAS系统的多功能平台。&#xA;安装 Openmediavault 的 github 存储库：https://github.com/OpenMediaVault-Plugin-Developers/installScript&#xA;在安装之前，请更新和升级您的树莓派&#xA;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade 使用以下命令安装，您可能需要等待一段时间。&#xA;sudo wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash 安装完成后，您应该能够使用树莓派的IP地址访问网站。然后默认的登录凭据是&#xA;用户名：admin 密码：openmediavault 登录后，您应该能够访问 openmediavault 的仪表板。您可以在登录后更改密码。&#xA;要创建一个可以被计算机访问的共享文件夹，您需要在仪表板上执行以下操作：&#xA;将驱动器挂载到系统上 在存储选项卡下创建一个共享文件夹 在 SMB/CIFS 服务下创建一个共享文件夹 执行以上步骤后，您就可以使用 Windows 访问共享文件夹。在 &amp;ldquo;This PC&amp;rdquo; 目录中，右键单击空白处，然后单击 &amp;ldquo;添加网络位置&amp;rdquo;，输入 \\your-server-ip，然后选择共享文件夹。</description>
    </item>
    <item>
      <title>How to do image processing in Android?</title>
      <link>https://shengtingcao.top/blog/imageprocessinginandroid/</link>
      <pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/imageprocessinginandroid/</guid>
      <description>My software is used in this poster&#xA;Android Canvas This section is the design one function in Android: pick up a photo from gallery and desplay in the App.&#xA;Tool I used Android Studio to develop my app. It is a mature technology that helps me to build app easily.&#xA;Add ImageView and Button In the &amp;ldquo;activity_main.xml&amp;rdquo; add a Button like this:&#xA;&amp;lt;Button android:id=&amp;#34;@+id/open_picture&amp;#34; style=&amp;#34;@style/Base.Widget.AppCompat.Button.Colored&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; android:text=&amp;#34;@string/open_picture&amp;#34; /&amp;gt; Also add the ImageView:</description>
    </item>
    <item>
      <title>How to design your own programming language?</title>
      <link>https://shengtingcao.top/blog/howtowriteyourprogramminglanguage/</link>
      <pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/howtowriteyourprogramminglanguage/</guid>
      <description>Programming laguage requirement A typical programming language supports a wide range of features and capabilities that enable developers to write, compile, and execute code to solve various computational problems. While the specific features and capabilities can vary between programming languages, here are some common elements that are typically supported in programming languages:&#xA;Data Types: Programming languages support various data types such as integers, floating-point numbers, characters, strings, booleans, arrays, and more.</description>
    </item>
    <item>
      <title>GitHub New Security Config</title>
      <link>https://shengtingcao.top/blog/github_token/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/github_token/</guid>
      <description>GitHub has recently upgraded its authentication protocol, shifting from a password-based approach to a more secure token-based system. While this update certainly boosts repository security, it does come with a slight trade-off in terms of convenience. I&amp;rsquo;ve taken some notes on how to adapt to these changes on GitHub:&#xA;The first step is to request a token directly from GitHub. Instead of inputting your password when pushing code, you should now employ this token as your GitHub account password.</description>
    </item>
    <item>
      <title>How to Enable Latex in The Blog?</title>
      <link>https://shengtingcao.top/blog/latexsyntax/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/latexsyntax/</guid>
      <description>Enable LaTax on webpage Add this HTML code into site-footer.html file because I use this template for every posts page.&#xA;&amp;lt;!-- enable math in the blog --&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;!-- KaTeX requires the use of the HTML5 doctype. Without it, KaTeX may not render properly --&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css&amp;#34; integrity=&amp;#34;sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt; &amp;lt;!-- The loading of KaTeX is deferred to speed up page rendering --&amp;gt; &amp;lt;script defer src=&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js&amp;#34; integrity=&amp;#34;sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!</description>
    </item>
    <item>
      <title>WebGL for Koch Snowflake</title>
      <link>https://shengtingcao.top/blog/snoflake/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/snoflake/</guid>
      <description>Problem Description Draw the Koch snowflake using recursive method with javascript!&#xA;Calculate the point for the Koch lines function calculatePoint(center, p){ var angleInDegrees = 60; var angleInRadians = angleInDegrees * Math.PI / 180; var s1 = Math.sin(angleInRadians); var c1 = Math.cos(angleInRadians); var x1 = (p[0] - center[0]) * c1 - (p[1] - center[1])* s1 + center[0]; var y1 = (p[0] - center[0]) * s1 + (p[1] - center[1])* c1 + center[1]; var f = vec2(x1,y1); return f; } Divide line into koch line and call the function recursively function divideLine(a, b,count) { if(count === 0){ var left; var right; left = mix(a,b,1/3); right = mix(a,b,2/3); var f = calculatePoint(left,right); drawLine(a,left,f,right,b); } else { var ab = mix (a,b,0.</description>
    </item>
    <item>
      <title>使用testdisk来恢复gopro数据文件</title>
      <link>https://shengtingcao.top/%E5%8D%9A%E5%AE%A2/filerecovery/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/%E5%8D%9A%E5%AE%A2/filerecovery/</guid>
      <description>在我们日常使用gopro这种使用micro sd卡来进行储存的设备难免会遇上需要将卡格式化的问题。我之前就碰到过这样的问题在网上找来一圈软件都需要付费来解决。但实际上针对硬盘或者sd卡恢复的问题已经就有开源的软件了。我亲自试了试Testdisk这款开源软件。相关的安装包在下面的链接里:&#xA;https://www.cgsecurity.org/wiki/TestDisk&#xA;我这里会写一个大概如何使用的博客来&#xA;首先解压文件夹双击testdis运行程序 创建一个log文件 选择需要恢复的sd卡或者硬盘 选择分区类型，程序会提示哪个类型的储存空间被检测到了 开始恢复，如果是已经删除的文件或者已经将sd卡格式化了。就用analyze进行全盘扫描。如果是没有格式化只不过系统提示要格式化sd卡。这个时候千万不要格式化卡。因为如果格式化之后恢复的文件很有可能是一段一段的，用mp4 格式的文件来举例，恢复出来的是几秒中一段的影像最后还要用其他软件将恢复的小片段拼合。如果没有格式化可以直接通过镜像拷贝的方式将整个文件恢复出来。 </description>
    </item>
    <item>
      <title>VIM Note</title>
      <link>https://shengtingcao.top/blog/vimnote/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://shengtingcao.top/blog/vimnote/</guid>
      <description>reference 1, vim cheat sheet&#xA;reference 2, vim command summary&#xA;multi-window lmuti-window basic operations :e filename - edit another file :split filename - split window and load another file ctrl-w up arrow - move cursor up a window ctrl-w ctrl-w - move cursor to another window (cycle) ctrl-w_ - maximize current window ctrl-w= - make all equal size 10 ctrl-w+ - increase window size by 10 lines :vsplit file - vertical split :sview file - same as split, but readonly :hide - close current window :only - keep only this window open :ls - show current buffers :b 2 - open buffer #2 in this window :bnext or :bn - go to the next buffer :bprev or :bp - go to the previous buffer :bd - delete a buffer (close a file) :ls - list all open buffers :sp file - open a file in a new buffer and split window :vsp file - open a file in a new buffer and vertically split window Ctrl + ws - split window Ctrl + ww - switch windows Ctrl + wq - quit a window Ctrl + wv - split window vertically Ctrl + wh - move cursor to the left window (vertical split) Ctrl + wl - move cursor to the right window (vertical split) Ctrl + wj - move cursor to the window below (horizontal split) Ctrl + wk - move cursor to the window above (horizontal split) cursor movement cursor movement h - move cursor left j - move cursor down k - move cursor up l - move cursor right H - move to top of screen M - move to middle of screen L - move to bottom of screen w - jump forwards to the start of a word W - jump forwards to the start of a word (words can contain punctuation) e - jump forwards to the end of a word E - jump forwards to the end of a word (words can contain punctuation) b - jump backwards to the start of a word B - jump backwards to the start of a word (words can contain punctuation) % - move to matching character (default supported pairs: &amp;#39;()&amp;#39;, &amp;#39;{}&amp;#39;, &amp;#39;[]&amp;#39; - use &amp;lt;code&amp;gt;:h matchpairs&amp;lt;/code&amp;gt; in vim for more info) 0 - jump to the start of the line ^ - jump to the first non-blank character of the line $ - jump to the end of the line g_ - jump to the last non-blank character of the line gg - go to the first line of the document G - go to the last line of the document 5G - go to line 5 fx - jump to next occurrence of character x tx - jump to before next occurrence of character x Fx - jump to previous occurence of character x Tx - jump to after previous occurence of character x ; - repeat previous f, t, F or T movement , - repeat previous f, t, F or T movement, backwards } - jump to next paragraph (or function/block, when editing code) { - jump to previous paragraph (or function/block, when editing code) zz - center cursor on screen Ctrl + e - move screen down one line (without moving cursor) Ctrl + y - move screen up one line (without moving cursor) Ctrl + b - move back one full screen Ctrl + f - Ctrl + d - Ctrl + u - Search and replace Search and replace /pattern - search for pattern ?</description>
    </item>
  </channel>
</rss>
